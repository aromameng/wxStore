<style lang="less">
@import "./lib/styles/base";
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'
import {
  USER_INFO,
  SYSTEM_INFO
} from "./utils/constant"

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/sign',
      'pages/my',
      'pages/classify',
      'pages/shop_cart',
      'pages/home_detail'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#e32600',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'white'
    },
    'tabBar': {
      "selectedColor": "#ff6a3c",
      'list': [{
        'pagePath': 'pages/index',
        'text': '首页',
        "iconPath": "lib/images/icon_home.png",
        "selectedIconPath": "lib/images/icon_home_active.png"
      }, {
        'pagePath': 'pages/classify',
        'text': '分类',
        "iconPath": "lib/images/icon_classify.png",
        "selectedIconPath": "lib/images/icon_classify_active.png"
      }, {
        'pagePath': 'pages/shop_cart',
        'text': '购物车',
        "iconPath": "lib/images/icon_shop_cart.png",
        "selectedIconPath": "lib/images/icon_shop_cart_active.png"
      }, {
        'pagePath': 'pages/my',
        'text': '我的',
        "iconPath": "lib/images/icon_info.png",
        "selectedIconPath": "lib/images/icon_info_active.png"
      }]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  async onLaunch() {
    // this.testAsync()
    let userInfo = wepy.getStorageSync(USER_INFO) || {}
    if (!userInfo.nickName) {
      // 存储userInfo
      let info = await wepy.getUserInfo()
      wepy.setStorageSync(USER_INFO, info.userInfo)

      // 存储系统信息
      let systemInfo = await wepy.getSystemInfoSync()
      console.log('22222', systemInfo)
      wepy.setStorageSync(SYSTEM_INFO, systemInfo)
    }
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
